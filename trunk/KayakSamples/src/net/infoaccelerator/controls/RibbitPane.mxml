<?xml version="1.0" encoding="utf-8"?>
<mx:Form label="Call Hotel With Ribbit" xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="onInitView(event)">

	<mx:Style source="../../../Beta2Style_Simple.css"/>
	
	<ribbit:RibbitRequest id="request"
		loggingIn="loggingStatus.text='Logging In To Ribbit VOIP';" 
		ribbitServerConnected="handleServerConnected()"		 
		incomingCall="handleIncomingCall(event.data as CallObject)" 
		callRinging="handleCallRinging()" 
		callConnected="handleCallConnected(event.data as CallObject)"  
		callDisconnected="handleCallDisconnected(event.data as CallObject)" 
		callHungup="handleCallHungup(event.data as CallObject)" 
		error="trace(event.data);" 
		callerFound="handleRibbitUser(event.data as RibbitUser)"
		xmlns:ribbit="com.ribbit.api.*"/>



	<mx:Script>
		<![CDATA[			
			//import ribbit phone classes
				import com.ribbit.api.objects.CallObject;
				import com.ribbit.api.objects.RibbitUser;
				import com.ribbit.api.connections.Globals;
				
				
			//delcare vars
				private var _incomingCall:CallObject;
				private var _activeCall:CallObject;
				public var out:String;
				[Bindable] public  var numberToCall:String;
				[Bindable] public  var panelTitle:String;
				[Bindable] private var inCall:Boolean;
			
			private function onInitView(e:Event):void{
				login('andrew.powell@universalmind.com','580pg3');
			}
			
			/**
			 * calls login() when login button is clicked
			 */			
			private function login(username:String,password:String):void {
				request.login(username, password, '', '');
			}
			
			/**
			 * calls makeCall() when Call button is clicked
			 */
			private function makeCall(event:Event):void {
				if (callButton.label == 'Call')
				{
					request.makeCall(number.text); 
					inCall=true;
					loggingStatus.text = loggingStatus.text + ' (dialing)';
				}
				else
				{
					request.hangup(_activeCall);
				}
			}
			
			/**
			 * event handler for ribbitServerConnected, sent from RibbitReuqest Object
			 */			
			private function handleServerConnected():void {
				callButton.enabled = true;
				loggingStatus.text='Connected To VOIP Service';
			}
			
			/**
			 * event handler for _incomingCall, sent from RibbitReuqest Object
			 */					
			private function handleIncomingCall(call:CallObject):void {
			}	

			/**
			 * calls answerCall() when answerCall button is clicked
			 */				
			private function answerCall():void {
				_activeCall = _incomingCall;				
				request.answerCall(_activeCall);				
				callButton.label = 'Hang Up';				
				inCall=true;
			}

			/**
			 * event handler for callRinging, sent from RibbitReuqest Object
			 */		
			private function handleCallRinging():void {
				callButton.label = 'Hang Up';
				loggingStatus.text = loggingStatus.text + ' (ringing)';
			}

			/**
			 * event handler for callConnected, sent from RibbitReuqest Object
			 */				
			private function handleCallConnected(call:CallObject):void {								
				_activeCall = call;
				
				//trace("***** " + _activeCall.callID + " " + _activeCall.status);				
				callButton.label = 'Hang Up'; 
				loggingStatus.text = loggingStatus.text + ' (connected)';
			}
			
			/**
			 * event handler for callDisconnected, sent from RibbitReuqest Object
			 */				
			private function handleCallDisconnected(disconnectedCall:CallObject):void {
				
				//trace("***** " + disconnectedCall.callID + " " + disconnectedCall.status);
				
				_activeCall = new CallObject();
				
				loggingStatus.text = loggingStatus.text + ' (ended)';
			}			

			/**
			 * event handler for callHungup, sent from RibbitReuqest Object
			 */				
			private function handleCallHungup(hangingUpCall:CallObject):void {
				
				//trace("***** " + hangingUpCall.callID + " " + hangingUpCall.status);
				callButton.label = 'Call';				
				loggingStatus.text = loggingStatus.text + ' (hungup)';
				inCall=false;
			}
			
			private function handleRibbitUser(user:RibbitUser):void {
				//trace(user.ismember);
			}								
			
		]]>
	</mx:Script>
	
	<mx:Label text="" id="loggingStatus" width="267"/>
	<mx:FormItem label="Number to Call:" >
		<mx:TextInput text="{numberToCall}" editable="false" id="number" />
	</mx:FormItem>								
	<mx:FormItem>
		<mx:Button id="callButton" label="Call" click="makeCall(event);" enabled="false"  width="80" styleName="go"/>
	</mx:FormItem>

	
</mx:Form>
